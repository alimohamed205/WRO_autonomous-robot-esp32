 ุชุฃูุฏ ููุงู ุฅู ุงูููุฏ ุงููู ุนูู ESP32 ุดุบุงู ูุจูุทุจุน

ุงูููุฏ ุงููู ูุชุจุชู:

void setup() {
  Serial.begin(115200);
}

void loop() {
  Serial.println("Hello from ESP32");
  delay(1000);
}

ูุธุจูุท ุชูุงูุ ุจุณ ุฏู ุจูุจุนุช ุนูู USB ููุท (ูุนูู ูู Serial Monitor ุจุชุงุน ุงููุงุจ).
ูู ุนุงูุฒ ุชุจุนุช ุนูู UART (ููุฌูุชุณูู)ุ ูุงุฒู ุชุณุชุฎุฏู Serial1 (ุฃู HardwareSerial ุชุงูู):
โ ููุฏ ูุดุชุบู ุนูู UART1:

void setup() {
  Serial1.begin(115200, SERIAL_8N1, 16, 17); // TX = 17, RX = 16
}

void loop() {
  Serial1.println("Hello from ESP32 to Jetson");
  delay(1000);
}

ููุตูู:

    ESP32 TX (GPIO 17) โถ Jetson Nano RX (Pin 10 โ /dev/ttyTHS1)

    GND โถ GND

โ ููุฏ ุงูุงุณุชูุจุงู ุนูู ุงูุฌูุชุณูู:

import serial
import time

ser = serial.Serial('/dev/ttyTHS1', 115200)
time.sleep(2)

while True:
    if ser.in_waiting:
        data = ser.readline().decode().strip()
        print("Received:", data)

ุฌุฑุจ ูุฏู ููุชูุงูู ุงูุฌูุชุณูู ุจุฏุฃ ูุทุจุน "Hello from ESP32 to Jetson" ๐ฅ
ููููู ูู ุนุงูุฒ ุชุนูุณ ุงูุงุชุฌุงู ุชุงูู ุฃู ุชุจุนุช ุฃูุงูุฑ ูุนููุฉ.
